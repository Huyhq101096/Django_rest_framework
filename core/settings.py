"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zjvcov79r9q#21ftimdq@l_19evf0_vbg#nw=nr4xjpg7))@-%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'blog_api',
    'rest_framework',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ]
}

# Permissions:
# AllowAny : Cho phep nguoi dung truy cap vao API endpoint ma khong can phai xac thuc hoac quyen truy cap dac biet
# IsAuthenticated : Yeu cau nguoi dung da xac thuc (authenticated) de truy cap vao API endpoint. Nguoi dung chua xac thuc se khong co quyen truy cap.
# IsAdminUser : Yeu cau nguoi dung la ng dung quan tri vien (superuser) de truy cap vao API endpoint. Cac nguoi dung khac khong co quyen truy cap
# IsAuthenticatedOrReadOnly : Cho phep nguoi dung da xac thuc truy cap vao tat ca cac phuong thuc HTTP (GET, POST, PUT, DELETE) trong khi cho phep cac yeu cau khong xac thuc chir duoc phep doc
# DjangoModelPermissions: Kiểm soát quyền truy cập dựa trên quyền truy cập cụ thể của Django Model. Ví dụ: view, add, change, delete. Quyền truy cập được xác định bởi quyền Django Model và nhóm người dùng của người dùng.
# DjangoObjectPermissions: Kiểm soát quyền truy cập dựa trên quyền truy cập cụ thể của Django Object. Cần phải chỉ định quyền truy cập trên đối tượng Django cụ thể.
# DjangoModelPermissionsOrAnonReadOnly:  Nguoi dung dang nhap: cap quyen gi thi xai quyen do. Nguoi dung chua dang nhap thi chi duoc doc .


CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://10.255.10.209:3000',
]

